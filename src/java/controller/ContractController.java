    package controller;

    import dal.ContractDAO;
    import dal.RequestDAO;
    import dal.UsersDAO;
    import model.Contract;
    import model.Request;

    import java.io.IOException;
    import java.sql.Date;
    import java.util.List;
    import jakarta.servlet.ServletException;
    import jakarta.servlet.annotation.WebServlet;
    import jakarta.servlet.http.HttpServlet;
    import jakarta.servlet.http.HttpServletRequest;
    import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
    import model.Users;

    @WebServlet(name = "ContractController", urlPatterns = {"/createContract"})
    public class ContractController extends HttpServlet {

        @Override
        protected void doGet(HttpServletRequest request, HttpServletResponse response)
                throws ServletException, IOException {
            HttpSession session = request.getSession(false);
        if (session == null || session.getAttribute("user") == null || ((Users) session.getAttribute("user")).getRoleID() != 3) {
            response.sendRedirect("login.jsp?error=access_denied"); // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang login n·∫øu kh√¥ng ph·∫£i qu·∫£n l√Ω
            return;
        }
            UsersDAO usersDAO = new UsersDAO();

            List<Users> users = usersDAO.getAllCustomers();
            request.setAttribute("users", users);
            RequestDAO requestDAO = new RequestDAO();
            // üü¢ L·∫•y danh s√°ch Requests ƒëang ch·ªù x·ª≠ l√Ω
            List<Request> requests = requestDAO.getPendingRequests();

            // ‚úÖ Truy·ªÅn danh s√°ch Requests v√†o request ƒë·ªÉ hi·ªÉn th·ªã tr√™n JSP
            request.setAttribute("requests", requests);
            
            // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang t·∫°o h·ª£p ƒë·ªìng
            request.getRequestDispatcher("createContract.jsp").forward(request, response);
        }

        @Override
        protected void doPost(HttpServletRequest request, HttpServletResponse response)
                throws ServletException, IOException {

            try {
                // üîπ Nh·∫≠n d·ªØ li·ªáu t·ª´ form
                int requestID = Integer.parseInt(request.getParameter("requestID"));
                String startLocation = request.getParameter("startLocation");
                String endLocation = request.getParameter("endLocation");
                Date startDate = Date.valueOf(request.getParameter("startDate"));
                Date endDate = Date.valueOf(request.getParameter("endDate"));
                double totalCost = Double.parseDouble(request.getParameter("totalCost"));
                double depositAmount = Double.parseDouble(request.getParameter("depositAmount"));

                // üîπ L·∫•y UserID t·ª´ RequestID
                RequestDAO requestDAO = new RequestDAO();
                int userID = requestDAO.getUserIDByRequestID(requestID);

                // üîπ Th√™m h·ª£p ƒë·ªìng v√†o DB
                ContractDAO contractDAO = new ContractDAO();
                int contractID = contractDAO.createContract(userID, requestID, startLocation, endLocation, startDate, endDate, totalCost, depositAmount);

                if (contractID > 0) {
                    requestDAO.updateRequestStatus(requestID, "resolved");
                    request.setAttribute("success ","H·ª£p ƒë·ªìng t·∫°o th√†nh c√¥ng ");
                    request.getRequestDispatcher("createContract.jsp").forward(request, response);
                } else {
                    System.err.println("‚ùå L·ªói: Kh√¥ng th·ªÉ t·∫°o h·ª£p ƒë·ªìng!");
                    request.setAttribute("error", "Kh√¥ng th·ªÉ t·∫°o h·ª£p ƒë·ªìng.");
                    request.getRequestDispatcher("createContract.jsp").forward(request, response);
                }

            } catch (Exception e) {
                e.printStackTrace();
                request.setAttribute("error", "‚ö† L·ªói h·ªá th·ªëng, vui l√≤ng th·ª≠ l·∫°i!");
                request.getRequestDispatcher("createContract.jsp").forward(request, response);
            }
        }
    }
